name: Fetch data

on:
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: "0 9 * * MON"
  workflow_dispatch:

jobs:
  fetch_data:
    runs-on: ubuntu-latest
    name: Fetch data
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}   
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'      
      - name: Install Dependencies
        run: | 
          pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run retractable
        run: python src/main/main.py
      - name: Commit and Push Changes
        run: |
          git add data/*.tsv data/*.csv
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "Automated data update" data/*.tsv data/*.csv
  run_nbs:
    needs: fetch_data
    runs-on: ubuntu-latest
    name: Run notebooks
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}   
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'      
      - name: Install Dependencies
        run: | 
          pip install jupyter
      - name: Run notebooks
        run: |
          input_directory="src/main/notebooks/"
          for notebook in $(ls $input_directory | grep ".*.ipynb"); do
            new_filename=$(echo $notebook | sed -E 's|ipynb|md|')
            echo $new_filename
            echo $notebook
            jupyter nbconvert --to markdown "$input_directory$notebook" 
            mv $input_directory$new_filename docs/$new_filename
          done
      - name: Check for Changes
        id: check_changes
        run: |
          if [[ -n $(git diff --exit-code docs/) ]]; then
            echo "There are changes in the 'docs/' directory."
            echo "::set-output name=changes::true"
          else
            echo "No changes in the 'docs/' directory. Skipping commit."
            echo "::set-output name=changes::false"
          fi

      - name: Commit and Push Changes
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git add docs/*
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "Automated notebook run" docs/*
          git push

